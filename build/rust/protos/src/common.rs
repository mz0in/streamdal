// This file is generated by rust-protobuf 3.2.0. Do not edit
// .proto file is parsed by protoc --rust-out=...
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `common.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_2_0;

///  Common status codes used in gRPC method responses
#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:protos.ResponseStatus)
pub enum ResponseStatus {
    // @@protoc_insertion_point(enum_value:protos.ResponseStatus.RESPONSE_STATUS_UNSET)
    RESPONSE_STATUS_UNSET = 0,
    // @@protoc_insertion_point(enum_value:protos.ResponseStatus.RESPONSE_STATUS_OK)
    RESPONSE_STATUS_OK = 1,
    // @@protoc_insertion_point(enum_value:protos.ResponseStatus.RESPONSE_STATUS_BAD_REQUEST)
    RESPONSE_STATUS_BAD_REQUEST = 2,
    // @@protoc_insertion_point(enum_value:protos.ResponseStatus.RESPONSE_STATUS_NOT_FOUND)
    RESPONSE_STATUS_NOT_FOUND = 3,
    // @@protoc_insertion_point(enum_value:protos.ResponseStatus.RESPONSE_STATUS_INTERNAL_SERVER_ERROR)
    RESPONSE_STATUS_INTERNAL_SERVER_ERROR = 4,
    // @@protoc_insertion_point(enum_value:protos.ResponseStatus.RESPONSE_STATUS_GENERIC_ERROR)
    RESPONSE_STATUS_GENERIC_ERROR = 5,
}

impl ::protobuf::Enum for ResponseStatus {
    const NAME: &'static str = "ResponseStatus";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<ResponseStatus> {
        match value {
            0 => ::std::option::Option::Some(ResponseStatus::RESPONSE_STATUS_UNSET),
            1 => ::std::option::Option::Some(ResponseStatus::RESPONSE_STATUS_OK),
            2 => ::std::option::Option::Some(ResponseStatus::RESPONSE_STATUS_BAD_REQUEST),
            3 => ::std::option::Option::Some(ResponseStatus::RESPONSE_STATUS_NOT_FOUND),
            4 => ::std::option::Option::Some(ResponseStatus::RESPONSE_STATUS_INTERNAL_SERVER_ERROR),
            5 => ::std::option::Option::Some(ResponseStatus::RESPONSE_STATUS_GENERIC_ERROR),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [ResponseStatus] = &[
        ResponseStatus::RESPONSE_STATUS_UNSET,
        ResponseStatus::RESPONSE_STATUS_OK,
        ResponseStatus::RESPONSE_STATUS_BAD_REQUEST,
        ResponseStatus::RESPONSE_STATUS_NOT_FOUND,
        ResponseStatus::RESPONSE_STATUS_INTERNAL_SERVER_ERROR,
        ResponseStatus::RESPONSE_STATUS_GENERIC_ERROR,
    ];
}

impl ::protobuf::EnumFull for ResponseStatus {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("ResponseStatus").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = *self as usize;
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for ResponseStatus {
    fn default() -> Self {
        ResponseStatus::RESPONSE_STATUS_UNSET
    }
}

impl ResponseStatus {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<ResponseStatus>("ResponseStatus")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x0ccommon.proto\x12\x06protos*\xd1\x01\n\x0eResponseStatus\x12\x19\n\
    \x15RESPONSE_STATUS_UNSET\x10\0\x12\x16\n\x12RESPONSE_STATUS_OK\x10\x01\
    \x12\x1f\n\x1bRESPONSE_STATUS_BAD_REQUEST\x10\x02\x12\x1d\n\x19RESPONSE_\
    STATUS_NOT_FOUND\x10\x03\x12)\n%RESPONSE_STATUS_INTERNAL_SERVER_ERROR\
    \x10\x04\x12!\n\x1dRESPONSE_STATUS_GENERIC_ERROR\x10\x05B4Z2github.com/s\
    treamdal/snitch-protos/build/go/protosJ\xf4\x02\n\x06\x12\x04\0\0\x0e\
    \x01\n\x08\n\x01\x0c\x12\x03\0\0\x12\n\x08\n\x01\x02\x12\x03\x02\0\x0f\n\
    \x08\n\x01\x08\x12\x03\x04\0I\n\t\n\x02\x08\x0b\x12\x03\x04\0I\n?\n\x02\
    \x05\0\x12\x04\x07\0\x0e\x01\x1a3\x20Common\x20status\x20codes\x20used\
    \x20in\x20gRPC\x20method\x20responses\n\n\n\n\x03\x05\0\x01\x12\x03\x07\
    \x05\x13\n\x0b\n\x04\x05\0\x02\0\x12\x03\x08\x02\x1b\n\x0c\n\x05\x05\0\
    \x02\0\x01\x12\x03\x08\x02\x17\n\x0c\n\x05\x05\0\x02\0\x02\x12\x03\x08\
    \x19\x1a\n\x0b\n\x04\x05\0\x02\x01\x12\x03\t\x02\x19\n\x0c\n\x05\x05\0\
    \x02\x01\x01\x12\x03\t\x02\x14\n\x0c\n\x05\x05\0\x02\x01\x02\x12\x03\t\
    \x17\x18\n\x0b\n\x04\x05\0\x02\x02\x12\x03\n\x02\"\n\x0c\n\x05\x05\0\x02\
    \x02\x01\x12\x03\n\x02\x1d\n\x0c\n\x05\x05\0\x02\x02\x02\x12\x03\n\x20!\
    \n\x0b\n\x04\x05\0\x02\x03\x12\x03\x0b\x02\x20\n\x0c\n\x05\x05\0\x02\x03\
    \x01\x12\x03\x0b\x02\x1b\n\x0c\n\x05\x05\0\x02\x03\x02\x12\x03\x0b\x1e\
    \x1f\n\x0b\n\x04\x05\0\x02\x04\x12\x03\x0c\x02,\n\x0c\n\x05\x05\0\x02\
    \x04\x01\x12\x03\x0c\x02'\n\x0c\n\x05\x05\0\x02\x04\x02\x12\x03\x0c*+\n\
    \x0b\n\x04\x05\0\x02\x05\x12\x03\r\x02$\n\x0c\n\x05\x05\0\x02\x05\x01\
    \x12\x03\r\x02\x1f\n\x0c\n\x05\x05\0\x02\x05\x02\x12\x03\r\"#b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(ResponseStatus::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
