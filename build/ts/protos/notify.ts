// @generated by protobuf-ts 2.9.0 with parameter optimize_code_size
// @generated from protobuf file "notify.proto" (package "protos", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message protos.NotificationConfig
 */
export interface NotificationConfig {
    /**
     * @generated from protobuf field: optional string id = 1;
     */
    id?: string;
    /**
     * @generated from protobuf field: optional string name = 2;
     */
    name?: string;
    /**
     * @generated from protobuf field: optional protos.NotificationType type = 3;
     */
    type?: NotificationType;
    /**
     * @generated from protobuf oneof: config
     */
    config: {
        oneofKind: "slack";
        /**
         * @generated from protobuf field: protos.NotificationSlack slack = 1000;
         */
        slack: NotificationSlack;
    } | {
        oneofKind: "email";
        /**
         * @generated from protobuf field: protos.NotificationEmail email = 1001;
         */
        email: NotificationEmail;
    } | {
        oneofKind: "pagerduty";
        /**
         * @generated from protobuf field: protos.NotificationPagerDuty pagerduty = 1002;
         */
        pagerduty: NotificationPagerDuty;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message protos.NotificationSlack
 */
export interface NotificationSlack {
    /**
     * @generated from protobuf field: optional string bot_token = 1;
     */
    botToken?: string;
    /**
     * @generated from protobuf field: optional string channel = 2;
     */
    channel?: string;
}
/**
 * @generated from protobuf message protos.NotificationEmail
 */
export interface NotificationEmail {
    /**
     * @generated from protobuf field: optional protos.NotificationEmail.Type type = 1;
     */
    type?: NotificationEmail_Type;
    /**
     * @generated from protobuf field: repeated string recipients = 2;
     */
    recipients: string[];
    /**
     * @generated from protobuf field: optional string from_address = 3;
     */
    fromAddress?: string;
    /**
     * @generated from protobuf oneof: config
     */
    config: {
        oneofKind: "smtp";
        /**
         * @generated from protobuf field: protos.NotificationEmailSMTP smtp = 1000;
         */
        smtp: NotificationEmailSMTP;
    } | {
        oneofKind: "ses";
        /**
         * @generated from protobuf field: protos.NotificationEmailSES ses = 1001;
         */
        ses: NotificationEmailSES;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf enum protos.NotificationEmail.Type
 */
export enum NotificationEmail_Type {
    /**
     * @generated from protobuf enum value: TYPE_UNSET = 0;
     */
    UNSET = 0,
    /**
     * @generated from protobuf enum value: TYPE_SMTP = 1;
     */
    SMTP = 1,
    /**
     * @generated from protobuf enum value: TYPE_SES = 2;
     */
    SES = 2
}
/**
 * @generated from protobuf message protos.NotificationEmailSMTP
 */
export interface NotificationEmailSMTP {
    /**
     * @generated from protobuf field: optional string host = 1;
     */
    host?: string;
    /**
     * @generated from protobuf field: optional int32 port = 2;
     */
    port?: number;
    /**
     * @generated from protobuf field: optional string user = 3;
     */
    user?: string;
    /**
     * @generated from protobuf field: optional string password = 4;
     */
    password?: string;
    /**
     * @generated from protobuf field: optional bool use_tls = 5;
     */
    useTls?: boolean;
}
/**
 * @generated from protobuf message protos.NotificationEmailSES
 */
export interface NotificationEmailSES {
    /**
     * @generated from protobuf field: optional string ses_region = 1;
     */
    sesRegion?: string;
    /**
     * @generated from protobuf field: optional string ses_access_key_id = 2;
     */
    sesAccessKeyId?: string;
    /**
     * @generated from protobuf field: optional string ses_secret_access_key = 3;
     */
    sesSecretAccessKey?: string;
}
/**
 * @generated from protobuf message protos.NotificationPagerDuty
 */
export interface NotificationPagerDuty {
    /**
     * Auth token
     *
     * @generated from protobuf field: optional string token = 1;
     */
    token?: string;
    /**
     * Must be a valid email for a PagerDuty user
     *
     * @generated from protobuf field: optional string email = 2;
     */
    email?: string;
    /**
     * Must be a valid PagerDuty service
     *
     * @generated from protobuf field: optional string service_id = 3;
     */
    serviceId?: string;
    /**
     * @generated from protobuf field: protos.NotificationPagerDuty.Urgency urgency = 4;
     */
    urgency: NotificationPagerDuty_Urgency;
}
/**
 * @generated from protobuf enum protos.NotificationPagerDuty.Urgency
 */
export enum NotificationPagerDuty_Urgency {
    /**
     * @generated from protobuf enum value: URGENCY_UNSET = 0;
     */
    UNSET = 0,
    /**
     * @generated from protobuf enum value: URGENCY_LOW = 1;
     */
    LOW = 1,
    /**
     * @generated from protobuf enum value: URGENCY_HIGH = 2;
     */
    HIGH = 2
}
/**
 * @generated from protobuf enum protos.NotificationType
 */
export enum NotificationType {
    /**
     * @generated from protobuf enum value: NOTIFICATION_TYPE_UNSET = 0;
     */
    UNSET = 0,
    /**
     * @generated from protobuf enum value: NOTIFICATION_TYPE_SLACK = 1;
     */
    SLACK = 1,
    /**
     * @generated from protobuf enum value: NOTIFICATION_TYPE_EMAIL = 2;
     */
    EMAIL = 2,
    /**
     * @generated from protobuf enum value: NOTIFICATION_TYPE_PAGERDUTY = 3;
     */
    PAGERDUTY = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class NotificationConfig$Type extends MessageType<NotificationConfig> {
    constructor() {
        super("protos.NotificationConfig", [
            { no: 1, name: "id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "enum", opt: true, T: () => ["protos.NotificationType", NotificationType, "NOTIFICATION_TYPE_"] },
            { no: 1000, name: "slack", kind: "message", oneof: "config", T: () => NotificationSlack },
            { no: 1001, name: "email", kind: "message", oneof: "config", T: () => NotificationEmail },
            { no: 1002, name: "pagerduty", kind: "message", oneof: "config", T: () => NotificationPagerDuty }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NotificationConfig
 */
export const NotificationConfig = new NotificationConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NotificationSlack$Type extends MessageType<NotificationSlack> {
    constructor() {
        super("protos.NotificationSlack", [
            { no: 1, name: "bot_token", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "channel", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NotificationSlack
 */
export const NotificationSlack = new NotificationSlack$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NotificationEmail$Type extends MessageType<NotificationEmail> {
    constructor() {
        super("protos.NotificationEmail", [
            { no: 1, name: "type", kind: "enum", opt: true, T: () => ["protos.NotificationEmail.Type", NotificationEmail_Type, "TYPE_"] },
            { no: 2, name: "recipients", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "from_address", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 1000, name: "smtp", kind: "message", oneof: "config", T: () => NotificationEmailSMTP },
            { no: 1001, name: "ses", kind: "message", oneof: "config", T: () => NotificationEmailSES }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NotificationEmail
 */
export const NotificationEmail = new NotificationEmail$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NotificationEmailSMTP$Type extends MessageType<NotificationEmailSMTP> {
    constructor() {
        super("protos.NotificationEmailSMTP", [
            { no: 1, name: "host", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "port", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "user", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "password", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "use_tls", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NotificationEmailSMTP
 */
export const NotificationEmailSMTP = new NotificationEmailSMTP$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NotificationEmailSES$Type extends MessageType<NotificationEmailSES> {
    constructor() {
        super("protos.NotificationEmailSES", [
            { no: 1, name: "ses_region", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "ses_access_key_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "ses_secret_access_key", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NotificationEmailSES
 */
export const NotificationEmailSES = new NotificationEmailSES$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NotificationPagerDuty$Type extends MessageType<NotificationPagerDuty> {
    constructor() {
        super("protos.NotificationPagerDuty", [
            { no: 1, name: "token", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "email", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "service_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "urgency", kind: "enum", T: () => ["protos.NotificationPagerDuty.Urgency", NotificationPagerDuty_Urgency, "URGENCY_"] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NotificationPagerDuty
 */
export const NotificationPagerDuty = new NotificationPagerDuty$Type();
