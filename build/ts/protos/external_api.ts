// @generated by protobuf-ts 2.9.0
// @generated from protobuf file "external_api.proto" (package "protos", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * protolint:disable INDENT
 *
 * @generated from protobuf message protos.GetServicesRequest
 */
export interface GetServicesRequest {
}
/**
 * @generated from protobuf message protos.GetServicesResponse
 */
export interface GetServicesResponse {
}
/**
 * @generated from protobuf message protos.GetServiceRequest
 */
export interface GetServiceRequest {
}
/**
 * @generated from protobuf message protos.GetServiceResponse
 */
export interface GetServiceResponse {
}
/**
 * @generated from protobuf message protos.GetPipelinesRequest
 */
export interface GetPipelinesRequest {
}
/**
 * @generated from protobuf message protos.GetPipelinesResponse
 */
export interface GetPipelinesResponse {
}
/**
 * @generated from protobuf message protos.GetPipelineRequest
 */
export interface GetPipelineRequest {
}
/**
 * @generated from protobuf message protos.GetPipelineResponse
 */
export interface GetPipelineResponse {
}
/**
 * @generated from protobuf message protos.SetPipelineRequest
 */
export interface SetPipelineRequest {
}
/**
 * @generated from protobuf message protos.SetPipelineResponse
 */
export interface SetPipelineResponse {
}
/**
 * @generated from protobuf message protos.DeletePipelineRequest
 */
export interface DeletePipelineRequest {
}
/**
 * @generated from protobuf message protos.DeletePipelineResponse
 */
export interface DeletePipelineResponse {
}
/**
 * @generated from protobuf message protos.GetStepsRequest
 */
export interface GetStepsRequest {
}
/**
 * @generated from protobuf message protos.GetStepsResponse
 */
export interface GetStepsResponse {
}
/**
 * @generated from protobuf message protos.CreateStepRequest
 */
export interface CreateStepRequest {
}
/**
 * @generated from protobuf message protos.CreateStepResponse
 */
export interface CreateStepResponse {
}
/**
 * @generated from protobuf message protos.UpdateStepRequest
 */
export interface UpdateStepRequest {
}
/**
 * @generated from protobuf message protos.UpdateStepResponse
 */
export interface UpdateStepResponse {
}
/**
 * @generated from protobuf message protos.DeleteStepRequest
 */
export interface DeleteStepRequest {
}
/**
 * @generated from protobuf message protos.DeleteStepResponse
 */
export interface DeleteStepResponse {
}
/**
 * @generated from protobuf message protos.TestRequest
 */
export interface TestRequest {
    /**
     * @generated from protobuf field: string input = 1;
     */
    input: string;
}
/**
 * @generated from protobuf message protos.TestResponse
 */
export interface TestResponse {
    /**
     * @generated from protobuf field: string output = 2;
     */
    output: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class GetServicesRequest$Type extends MessageType<GetServicesRequest> {
    constructor() {
        super("protos.GetServicesRequest", []);
    }
    create(value?: PartialMessage<GetServicesRequest>): GetServicesRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetServicesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetServicesRequest): GetServicesRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetServicesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.GetServicesRequest
 */
export const GetServicesRequest = new GetServicesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetServicesResponse$Type extends MessageType<GetServicesResponse> {
    constructor() {
        super("protos.GetServicesResponse", []);
    }
    create(value?: PartialMessage<GetServicesResponse>): GetServicesResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetServicesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetServicesResponse): GetServicesResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetServicesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.GetServicesResponse
 */
export const GetServicesResponse = new GetServicesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetServiceRequest$Type extends MessageType<GetServiceRequest> {
    constructor() {
        super("protos.GetServiceRequest", []);
    }
    create(value?: PartialMessage<GetServiceRequest>): GetServiceRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetServiceRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetServiceRequest): GetServiceRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetServiceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.GetServiceRequest
 */
export const GetServiceRequest = new GetServiceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetServiceResponse$Type extends MessageType<GetServiceResponse> {
    constructor() {
        super("protos.GetServiceResponse", []);
    }
    create(value?: PartialMessage<GetServiceResponse>): GetServiceResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetServiceResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetServiceResponse): GetServiceResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetServiceResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.GetServiceResponse
 */
export const GetServiceResponse = new GetServiceResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPipelinesRequest$Type extends MessageType<GetPipelinesRequest> {
    constructor() {
        super("protos.GetPipelinesRequest", []);
    }
    create(value?: PartialMessage<GetPipelinesRequest>): GetPipelinesRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPipelinesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPipelinesRequest): GetPipelinesRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetPipelinesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.GetPipelinesRequest
 */
export const GetPipelinesRequest = new GetPipelinesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPipelinesResponse$Type extends MessageType<GetPipelinesResponse> {
    constructor() {
        super("protos.GetPipelinesResponse", []);
    }
    create(value?: PartialMessage<GetPipelinesResponse>): GetPipelinesResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPipelinesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPipelinesResponse): GetPipelinesResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetPipelinesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.GetPipelinesResponse
 */
export const GetPipelinesResponse = new GetPipelinesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPipelineRequest$Type extends MessageType<GetPipelineRequest> {
    constructor() {
        super("protos.GetPipelineRequest", []);
    }
    create(value?: PartialMessage<GetPipelineRequest>): GetPipelineRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPipelineRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPipelineRequest): GetPipelineRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetPipelineRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.GetPipelineRequest
 */
export const GetPipelineRequest = new GetPipelineRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPipelineResponse$Type extends MessageType<GetPipelineResponse> {
    constructor() {
        super("protos.GetPipelineResponse", []);
    }
    create(value?: PartialMessage<GetPipelineResponse>): GetPipelineResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPipelineResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPipelineResponse): GetPipelineResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetPipelineResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.GetPipelineResponse
 */
export const GetPipelineResponse = new GetPipelineResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetPipelineRequest$Type extends MessageType<SetPipelineRequest> {
    constructor() {
        super("protos.SetPipelineRequest", []);
    }
    create(value?: PartialMessage<SetPipelineRequest>): SetPipelineRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetPipelineRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetPipelineRequest): SetPipelineRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: SetPipelineRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.SetPipelineRequest
 */
export const SetPipelineRequest = new SetPipelineRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetPipelineResponse$Type extends MessageType<SetPipelineResponse> {
    constructor() {
        super("protos.SetPipelineResponse", []);
    }
    create(value?: PartialMessage<SetPipelineResponse>): SetPipelineResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetPipelineResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetPipelineResponse): SetPipelineResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: SetPipelineResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.SetPipelineResponse
 */
export const SetPipelineResponse = new SetPipelineResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeletePipelineRequest$Type extends MessageType<DeletePipelineRequest> {
    constructor() {
        super("protos.DeletePipelineRequest", []);
    }
    create(value?: PartialMessage<DeletePipelineRequest>): DeletePipelineRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DeletePipelineRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeletePipelineRequest): DeletePipelineRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: DeletePipelineRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.DeletePipelineRequest
 */
export const DeletePipelineRequest = new DeletePipelineRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeletePipelineResponse$Type extends MessageType<DeletePipelineResponse> {
    constructor() {
        super("protos.DeletePipelineResponse", []);
    }
    create(value?: PartialMessage<DeletePipelineResponse>): DeletePipelineResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DeletePipelineResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeletePipelineResponse): DeletePipelineResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: DeletePipelineResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.DeletePipelineResponse
 */
export const DeletePipelineResponse = new DeletePipelineResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStepsRequest$Type extends MessageType<GetStepsRequest> {
    constructor() {
        super("protos.GetStepsRequest", []);
    }
    create(value?: PartialMessage<GetStepsRequest>): GetStepsRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetStepsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetStepsRequest): GetStepsRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetStepsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.GetStepsRequest
 */
export const GetStepsRequest = new GetStepsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStepsResponse$Type extends MessageType<GetStepsResponse> {
    constructor() {
        super("protos.GetStepsResponse", []);
    }
    create(value?: PartialMessage<GetStepsResponse>): GetStepsResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetStepsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetStepsResponse): GetStepsResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetStepsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.GetStepsResponse
 */
export const GetStepsResponse = new GetStepsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateStepRequest$Type extends MessageType<CreateStepRequest> {
    constructor() {
        super("protos.CreateStepRequest", []);
    }
    create(value?: PartialMessage<CreateStepRequest>): CreateStepRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CreateStepRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateStepRequest): CreateStepRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: CreateStepRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.CreateStepRequest
 */
export const CreateStepRequest = new CreateStepRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateStepResponse$Type extends MessageType<CreateStepResponse> {
    constructor() {
        super("protos.CreateStepResponse", []);
    }
    create(value?: PartialMessage<CreateStepResponse>): CreateStepResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CreateStepResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateStepResponse): CreateStepResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: CreateStepResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.CreateStepResponse
 */
export const CreateStepResponse = new CreateStepResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateStepRequest$Type extends MessageType<UpdateStepRequest> {
    constructor() {
        super("protos.UpdateStepRequest", []);
    }
    create(value?: PartialMessage<UpdateStepRequest>): UpdateStepRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdateStepRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateStepRequest): UpdateStepRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: UpdateStepRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.UpdateStepRequest
 */
export const UpdateStepRequest = new UpdateStepRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateStepResponse$Type extends MessageType<UpdateStepResponse> {
    constructor() {
        super("protos.UpdateStepResponse", []);
    }
    create(value?: PartialMessage<UpdateStepResponse>): UpdateStepResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdateStepResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateStepResponse): UpdateStepResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: UpdateStepResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.UpdateStepResponse
 */
export const UpdateStepResponse = new UpdateStepResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteStepRequest$Type extends MessageType<DeleteStepRequest> {
    constructor() {
        super("protos.DeleteStepRequest", []);
    }
    create(value?: PartialMessage<DeleteStepRequest>): DeleteStepRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DeleteStepRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteStepRequest): DeleteStepRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: DeleteStepRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.DeleteStepRequest
 */
export const DeleteStepRequest = new DeleteStepRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteStepResponse$Type extends MessageType<DeleteStepResponse> {
    constructor() {
        super("protos.DeleteStepResponse", []);
    }
    create(value?: PartialMessage<DeleteStepResponse>): DeleteStepResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DeleteStepResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteStepResponse): DeleteStepResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: DeleteStepResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.DeleteStepResponse
 */
export const DeleteStepResponse = new DeleteStepResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestRequest$Type extends MessageType<TestRequest> {
    constructor() {
        super("protos.TestRequest", [
            { no: 1, name: "input", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TestRequest>): TestRequest {
        const message = { input: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TestRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TestRequest): TestRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string input */ 1:
                    message.input = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TestRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string input = 1; */
        if (message.input !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.input);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.TestRequest
 */
export const TestRequest = new TestRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestResponse$Type extends MessageType<TestResponse> {
    constructor() {
        super("protos.TestResponse", [
            { no: 2, name: "output", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TestResponse>): TestResponse {
        const message = { output: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TestResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TestResponse): TestResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string output */ 2:
                    message.output = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TestResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string output = 2; */
        if (message.output !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.output);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protos.TestResponse
 */
export const TestResponse = new TestResponse$Type();
/**
 * @generated ServiceType for protobuf service protos.External
 */
export const External = new ServiceType("protos.External", [
    { name: "GetServices", options: {}, I: GetServicesRequest, O: GetServicesResponse },
    { name: "GetService", options: {}, I: GetServiceRequest, O: GetServiceResponse },
    { name: "GetPipelines", options: {}, I: GetPipelinesRequest, O: GetPipelinesResponse },
    { name: "GetPipeline", options: {}, I: GetPipelineRequest, O: GetPipelineResponse },
    { name: "SetPipeline", options: {}, I: SetPipelineRequest, O: SetPipelineResponse },
    { name: "DeletePipeline", options: {}, I: DeletePipelineRequest, O: DeletePipelineResponse },
    { name: "GetSteps", options: {}, I: GetStepsRequest, O: GetStepsResponse },
    { name: "CreateStep", options: {}, I: CreateStepRequest, O: CreateStepResponse },
    { name: "UpdateStep", options: {}, I: UpdateStepRequest, O: UpdateStepResponse },
    { name: "DeleteStep", options: {}, I: DeleteStepRequest, O: DeleteStepResponse },
    { name: "Test", options: {}, I: TestRequest, O: TestResponse }
]);
