// @generated by protobuf-ts 2.9.0 with parameter optimize_code_size
// @generated from protobuf file "notify.proto" (package "protos", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message protos.NotifyConfig
 */
export interface NotifyConfig {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: protos.NotifyType type = 3;
     */
    type: NotifyType;
    /**
     * @generated from protobuf field: repeated string pipelines = 4;
     */
    pipelines: string[];
    /**
     * @generated from protobuf oneof: config
     */
    config: {
        oneofKind: "slack";
        /**
         * @generated from protobuf field: protos.NotifySlack slack = 1000;
         */
        slack: NotifySlack;
    } | {
        oneofKind: "email";
        /**
         * @generated from protobuf field: protos.NotifyEmail email = 1001;
         */
        email: NotifyEmail;
    } | {
        oneofKind: "pagerduty";
        /**
         * @generated from protobuf field: protos.NotifyPagerDuty pagerduty = 1002;
         */
        pagerduty: NotifyPagerDuty;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message protos.NotifySlack
 */
export interface NotifySlack {
    /**
     * @generated from protobuf field: optional string bot_token = 1;
     */
    botToken?: string;
    /**
     * @generated from protobuf field: optional string channel = 2;
     */
    channel?: string;
}
/**
 * @generated from protobuf message protos.NotifyEmail
 */
export interface NotifyEmail {
    /**
     * @generated from protobuf field: repeated string recipients = 1;
     */
    recipients: string[];
}
/**
 * @generated from protobuf message protos.NotifyPagerDuty
 */
export interface NotifyPagerDuty {
    /**
     * Auth token
     *
     * @generated from protobuf field: string token = 1;
     */
    token: string;
    /**
     * Must be a valid email for a PagerDuty user
     *
     * @generated from protobuf field: string email = 2;
     */
    email: string;
    /**
     * Must be a valid PagerDuty service
     *
     * @generated from protobuf field: string service_id = 3;
     */
    serviceId: string;
    /**
     * @generated from protobuf field: protos.NotifyPagerDuty.Urgency urgency = 4;
     */
    urgency: NotifyPagerDuty_Urgency;
}
/**
 * @generated from protobuf enum protos.NotifyPagerDuty.Urgency
 */
export enum NotifyPagerDuty_Urgency {
    /**
     * @generated from protobuf enum value: URGENCY_UNSET = 0;
     */
    UNSET = 0,
    /**
     * @generated from protobuf enum value: URGENCY_LOW = 1;
     */
    LOW = 1,
    /**
     * @generated from protobuf enum value: URGENCY_HIGH = 2;
     */
    HIGH = 2
}
/**
 * @generated from protobuf enum protos.NotifyType
 */
export enum NotifyType {
    /**
     * @generated from protobuf enum value: NOTIFY_TYPE_UNSET = 0;
     */
    UNSET = 0,
    /**
     * @generated from protobuf enum value: NOTIFY_TYPE_SLACK = 1;
     */
    SLACK = 1,
    /**
     * @generated from protobuf enum value: NOTIFY_TYPE_EMAIL = 2;
     */
    EMAIL = 2,
    /**
     * @generated from protobuf enum value: NOTIFY_TYPE_PAGERDUTY = 3;
     */
    PAGERDUTY = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class NotifyConfig$Type extends MessageType<NotifyConfig> {
    constructor() {
        super("protos.NotifyConfig", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "enum", T: () => ["protos.NotifyType", NotifyType, "NOTIFY_TYPE_"] },
            { no: 4, name: "pipelines", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 1000, name: "slack", kind: "message", oneof: "config", T: () => NotifySlack },
            { no: 1001, name: "email", kind: "message", oneof: "config", T: () => NotifyEmail },
            { no: 1002, name: "pagerduty", kind: "message", oneof: "config", T: () => NotifyPagerDuty }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NotifyConfig
 */
export const NotifyConfig = new NotifyConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NotifySlack$Type extends MessageType<NotifySlack> {
    constructor() {
        super("protos.NotifySlack", [
            { no: 1, name: "bot_token", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "channel", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NotifySlack
 */
export const NotifySlack = new NotifySlack$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NotifyEmail$Type extends MessageType<NotifyEmail> {
    constructor() {
        super("protos.NotifyEmail", [
            { no: 1, name: "recipients", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NotifyEmail
 */
export const NotifyEmail = new NotifyEmail$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NotifyPagerDuty$Type extends MessageType<NotifyPagerDuty> {
    constructor() {
        super("protos.NotifyPagerDuty", [
            { no: 1, name: "token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "service_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "urgency", kind: "enum", T: () => ["protos.NotifyPagerDuty.Urgency", NotifyPagerDuty_Urgency, "URGENCY_"] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NotifyPagerDuty
 */
export const NotifyPagerDuty = new NotifyPagerDuty$Type();
