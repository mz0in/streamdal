"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Internal = exports.GetAttachCommandsByServiceResponse = exports.GetAttachCommandsByServiceRequest = exports.DeregisterRequest = exports.RegisterRequest = exports.MetricsRequest = exports.NotifyRequest = exports.HeartbeatRequest = exports.NewAudienceRequest = void 0;
// @generated by protobuf-ts 2.9.0 with parameter optimize_code_size
// @generated from protobuf file "sp_internal.proto" (package "protos", syntax proto3)
// tslint:disable
const sp_common_1 = require("./sp_common");
const sp_common_2 = require("./sp_common");
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const sp_command_1 = require("./sp_command");
const sp_info_1 = require("./sp_info");
const sp_common_3 = require("./sp_common");
const sp_common_4 = require("./sp_common");
// @generated message type with reflection information, may provide speed optimized methods
class NewAudienceRequest$Type extends runtime_1.MessageType {
    constructor() {
        super("protos.NewAudienceRequest", [
            { no: 1, name: "session_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "audience", kind: "message", T: () => sp_common_4.Audience }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NewAudienceRequest
 */
exports.NewAudienceRequest = new NewAudienceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HeartbeatRequest$Type extends runtime_1.MessageType {
    constructor() {
        super("protos.HeartbeatRequest", [
            { no: 1, name: "session_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.HeartbeatRequest
 */
exports.HeartbeatRequest = new HeartbeatRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NotifyRequest$Type extends runtime_1.MessageType {
    constructor() {
        super("protos.NotifyRequest", [
            { no: 1, name: "pipeline_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "step_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "audience", kind: "message", T: () => sp_common_4.Audience },
            { no: 4, name: "occurred_at_unix_ts_utc", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.NotifyRequest
 */
exports.NotifyRequest = new NotifyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MetricsRequest$Type extends runtime_1.MessageType {
    constructor() {
        super("protos.MetricsRequest", [
            { no: 1, name: "metrics", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => sp_common_3.Metric }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.MetricsRequest
 */
exports.MetricsRequest = new MetricsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisterRequest$Type extends runtime_1.MessageType {
    constructor() {
        super("protos.RegisterRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "session_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "client_info", kind: "message", T: () => sp_info_1.ClientInfo },
            { no: 4, name: "audiences", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => sp_common_4.Audience },
            { no: 5, name: "dry_run", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.RegisterRequest
 */
exports.RegisterRequest = new RegisterRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeregisterRequest$Type extends runtime_1.MessageType {
    constructor() {
        super("protos.DeregisterRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "session_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.DeregisterRequest
 */
exports.DeregisterRequest = new DeregisterRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAttachCommandsByServiceRequest$Type extends runtime_1.MessageType {
    constructor() {
        super("protos.GetAttachCommandsByServiceRequest", [
            { no: 1, name: "service_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.GetAttachCommandsByServiceRequest
 */
exports.GetAttachCommandsByServiceRequest = new GetAttachCommandsByServiceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAttachCommandsByServiceResponse$Type extends runtime_1.MessageType {
    constructor() {
        super("protos.GetAttachCommandsByServiceResponse", [
            { no: 1, name: "active", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => sp_command_1.Command },
            { no: 2, name: "paused", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => sp_command_1.Command }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protos.GetAttachCommandsByServiceResponse
 */
exports.GetAttachCommandsByServiceResponse = new GetAttachCommandsByServiceResponse$Type();
/**
 * @generated ServiceType for protobuf service protos.Internal
 */
exports.Internal = new runtime_rpc_1.ServiceType("protos.Internal", [
    { name: "Register", serverStreaming: true, options: {}, I: exports.RegisterRequest, O: sp_command_1.Command },
    { name: "NewAudience", options: {}, I: exports.NewAudienceRequest, O: sp_common_2.StandardResponse },
    { name: "Heartbeat", options: {}, I: exports.HeartbeatRequest, O: sp_common_2.StandardResponse },
    { name: "Notify", options: {}, I: exports.NotifyRequest, O: sp_common_2.StandardResponse },
    { name: "Metrics", options: {}, I: exports.MetricsRequest, O: sp_common_2.StandardResponse },
    { name: "GetAttachCommandsByService", options: {}, I: exports.GetAttachCommandsByServiceRequest, O: exports.GetAttachCommandsByServiceResponse },
    { name: "SendTail", clientStreaming: true, options: {}, I: sp_common_1.TailResponse, O: sp_common_2.StandardResponse }
]);
