// @generated by protobuf-ts 2.9.0 with parameter optimize_code_size
// @generated from protobuf file "common.proto" (package "protos", syntax proto3)
// tslint:disable
function _assert_this_initialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _get_prototype_of(o) {
    _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _get_prototype_of(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _set_prototype_of(subClass, superClass);
}
function _possible_constructor_return(self, call) {
    if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assert_this_initialized(self);
}
function _set_prototype_of(o, p) {
    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _set_prototype_of(o, p);
}
function _type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function _is_native_reflect_construct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _create_super(Derived) {
    var hasNativeReflectConstruct = _is_native_reflect_construct();
    return function _createSuperInternal() {
        var Super = _get_prototype_of(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _get_prototype_of(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possible_constructor_return(this, result);
    };
}
import { MessageType } from "@protobuf-ts/runtime";
export var ResponseCode;
(function(ResponseCode) {
    ResponseCode[ResponseCode[/**
     * @generated from protobuf enum value: RESPONSE_CODE_UNSET = 0;
     */ "UNSET"] = 0] = "UNSET";
    ResponseCode[ResponseCode[/**
     * @generated from protobuf enum value: RESPONSE_CODE_OK = 1;
     */ "OK"] = 1] = "OK";
    ResponseCode[ResponseCode[/**
     * @generated from protobuf enum value: RESPONSE_CODE_BAD_REQUEST = 2;
     */ "BAD_REQUEST"] = 2] = "BAD_REQUEST";
    ResponseCode[ResponseCode[/**
     * @generated from protobuf enum value: RESPONSE_CODE_NOT_FOUND = 3;
     */ "NOT_FOUND"] = 3] = "NOT_FOUND";
    ResponseCode[ResponseCode[/**
     * @generated from protobuf enum value: RESPONSE_CODE_INTERNAL_SERVER_ERROR = 4;
     */ "INTERNAL_SERVER_ERROR"] = 4] = "INTERNAL_SERVER_ERROR";
    ResponseCode[ResponseCode[/**
     * @generated from protobuf enum value: RESPONSE_CODE_GENERIC_ERROR = 5;
     */ "GENERIC_ERROR"] = 5] = "GENERIC_ERROR";
})(ResponseCode || (ResponseCode = {}));
// @generated message type with reflection information, may provide speed optimized methods
var StandardResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(StandardResponse$Type, MessageType1);
    var _super = _create_super(StandardResponse$Type);
    function StandardResponse$Type() {
        _class_call_check(this, StandardResponse$Type);
        return _super.call(this, "protos.StandardResponse", [
            {
                no: 1,
                name: "id",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            },
            {
                no: 2,
                name: "code",
                kind: "enum",
                T: function() {
                    return [
                        "protos.ResponseCode",
                        ResponseCode,
                        "RESPONSE_CODE_"
                    ];
                }
            },
            {
                no: 3,
                name: "message",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            },
            {
                no: 1000,
                name: "_metadata",
                kind: "map",
                K: 9 /*ScalarType.STRING*/ ,
                V: {
                    kind: "scalar",
                    T: 9 /*ScalarType.STRING*/ 
                }
            }
        ]);
    }
    return StandardResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.StandardResponse
 */ export var StandardResponse = new StandardResponse$Type();
