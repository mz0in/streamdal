"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransformStep = exports.TransformType = void 0;
// @generated by protobuf-ts 2.9.0 with parameter optimize_code_size,client_grpc1
// @generated from protobuf file "steps/transform.proto" (package "protos.steps", syntax proto3)
// tslint:disable
var runtime_1 = require("@protobuf-ts/runtime");
/**
 * @generated from protobuf enum protos.steps.TransformType
 */
var TransformType;
(function (TransformType) {
    /**
     * @generated from protobuf enum value: TRANSFORM_TYPE_UNKNOWN = 0;
     */
    TransformType[TransformType["UNKNOWN"] = 0] = "UNKNOWN";
    /**
     * @generated from protobuf enum value: TRANSFORM_TYPE_REPLACE_VALUE = 1;
     */
    TransformType[TransformType["REPLACE_VALUE"] = 1] = "REPLACE_VALUE";
    /**
     * @generated from protobuf enum value: TRANSFORM_TYPE_DELETE_FIELD = 2;
     */
    TransformType[TransformType["DELETE_FIELD"] = 2] = "DELETE_FIELD";
    /**
     * @generated from protobuf enum value: TRANSFORM_TYPE_OBFUSCATE_VALUE = 3;
     */
    TransformType[TransformType["OBFUSCATE_VALUE"] = 3] = "OBFUSCATE_VALUE";
    /**
     * @generated from protobuf enum value: TRANSFORM_TYPE_MASK_VALUE = 4;
     */
    TransformType[TransformType["MASK_VALUE"] = 4] = "MASK_VALUE";
})(TransformType || (exports.TransformType = TransformType = {}));
// @generated message type with reflection information, may provide speed optimized methods
var TransformStep$Type = /** @class */ (function (_super) {
    __extends(TransformStep$Type, _super);
    function TransformStep$Type() {
        return _super.call(this, "protos.steps.TransformStep", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "enum", T: function () { return ["protos.steps.TransformType", TransformType, "TRANSFORM_TYPE_"]; } }
        ]) || this;
    }
    return TransformStep$Type;
}(runtime_1.MessageType));
/**
 * @generated MessageType for protobuf message protos.steps.TransformStep
 */
exports.TransformStep = new TransformStep$Type();
//# sourceMappingURL=transform.js.map