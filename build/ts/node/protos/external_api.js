// @generated by protobuf-ts 2.9.0 with parameter optimize_code_size
// @generated from protobuf file "external_api.proto" (package "protos", syntax proto3)
// tslint:disable
function _assert_this_initialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _get_prototype_of(o) {
    _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _get_prototype_of(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _set_prototype_of(subClass, superClass);
}
function _possible_constructor_return(self, call) {
    if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assert_this_initialized(self);
}
function _set_prototype_of(o, p) {
    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _set_prototype_of(o, p);
}
function _type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function _is_native_reflect_construct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _create_super(Derived) {
    var hasNativeReflectConstruct = _is_native_reflect_construct();
    return function _createSuperInternal() {
        var Super = _get_prototype_of(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _get_prototype_of(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possible_constructor_return(this, result);
    };
}
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
// @generated message type with reflection information, may provide speed optimized methods
var GetServicesRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(GetServicesRequest$Type, MessageType1);
    var _super = _create_super(GetServicesRequest$Type);
    function GetServicesRequest$Type() {
        _class_call_check(this, GetServicesRequest$Type);
        return _super.call(this, "protos.GetServicesRequest", []);
    }
    return GetServicesRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.GetServicesRequest
 */ export var GetServicesRequest = new GetServicesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var GetServicesResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(GetServicesResponse$Type, MessageType1);
    var _super = _create_super(GetServicesResponse$Type);
    function GetServicesResponse$Type() {
        _class_call_check(this, GetServicesResponse$Type);
        return _super.call(this, "protos.GetServicesResponse", []);
    }
    return GetServicesResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.GetServicesResponse
 */ export var GetServicesResponse = new GetServicesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
var GetServiceRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(GetServiceRequest$Type, MessageType1);
    var _super = _create_super(GetServiceRequest$Type);
    function GetServiceRequest$Type() {
        _class_call_check(this, GetServiceRequest$Type);
        return _super.call(this, "protos.GetServiceRequest", []);
    }
    return GetServiceRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.GetServiceRequest
 */ export var GetServiceRequest = new GetServiceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var GetServiceResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(GetServiceResponse$Type, MessageType1);
    var _super = _create_super(GetServiceResponse$Type);
    function GetServiceResponse$Type() {
        _class_call_check(this, GetServiceResponse$Type);
        return _super.call(this, "protos.GetServiceResponse", []);
    }
    return GetServiceResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.GetServiceResponse
 */ export var GetServiceResponse = new GetServiceResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
var GetPipelinesRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(GetPipelinesRequest$Type, MessageType1);
    var _super = _create_super(GetPipelinesRequest$Type);
    function GetPipelinesRequest$Type() {
        _class_call_check(this, GetPipelinesRequest$Type);
        return _super.call(this, "protos.GetPipelinesRequest", []);
    }
    return GetPipelinesRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.GetPipelinesRequest
 */ export var GetPipelinesRequest = new GetPipelinesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var GetPipelinesResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(GetPipelinesResponse$Type, MessageType1);
    var _super = _create_super(GetPipelinesResponse$Type);
    function GetPipelinesResponse$Type() {
        _class_call_check(this, GetPipelinesResponse$Type);
        return _super.call(this, "protos.GetPipelinesResponse", []);
    }
    return GetPipelinesResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.GetPipelinesResponse
 */ export var GetPipelinesResponse = new GetPipelinesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
var GetPipelineRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(GetPipelineRequest$Type, MessageType1);
    var _super = _create_super(GetPipelineRequest$Type);
    function GetPipelineRequest$Type() {
        _class_call_check(this, GetPipelineRequest$Type);
        return _super.call(this, "protos.GetPipelineRequest", []);
    }
    return GetPipelineRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.GetPipelineRequest
 */ export var GetPipelineRequest = new GetPipelineRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var GetPipelineResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(GetPipelineResponse$Type, MessageType1);
    var _super = _create_super(GetPipelineResponse$Type);
    function GetPipelineResponse$Type() {
        _class_call_check(this, GetPipelineResponse$Type);
        return _super.call(this, "protos.GetPipelineResponse", []);
    }
    return GetPipelineResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.GetPipelineResponse
 */ export var GetPipelineResponse = new GetPipelineResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
var SetPipelineRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(SetPipelineRequest$Type, MessageType1);
    var _super = _create_super(SetPipelineRequest$Type);
    function SetPipelineRequest$Type() {
        _class_call_check(this, SetPipelineRequest$Type);
        return _super.call(this, "protos.SetPipelineRequest", []);
    }
    return SetPipelineRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.SetPipelineRequest
 */ export var SetPipelineRequest = new SetPipelineRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var SetPipelineResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(SetPipelineResponse$Type, MessageType1);
    var _super = _create_super(SetPipelineResponse$Type);
    function SetPipelineResponse$Type() {
        _class_call_check(this, SetPipelineResponse$Type);
        return _super.call(this, "protos.SetPipelineResponse", []);
    }
    return SetPipelineResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.SetPipelineResponse
 */ export var SetPipelineResponse = new SetPipelineResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
var DeletePipelineRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(DeletePipelineRequest$Type, MessageType1);
    var _super = _create_super(DeletePipelineRequest$Type);
    function DeletePipelineRequest$Type() {
        _class_call_check(this, DeletePipelineRequest$Type);
        return _super.call(this, "protos.DeletePipelineRequest", []);
    }
    return DeletePipelineRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.DeletePipelineRequest
 */ export var DeletePipelineRequest = new DeletePipelineRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var DeletePipelineResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(DeletePipelineResponse$Type, MessageType1);
    var _super = _create_super(DeletePipelineResponse$Type);
    function DeletePipelineResponse$Type() {
        _class_call_check(this, DeletePipelineResponse$Type);
        return _super.call(this, "protos.DeletePipelineResponse", []);
    }
    return DeletePipelineResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.DeletePipelineResponse
 */ export var DeletePipelineResponse = new DeletePipelineResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
var GetStepsRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(GetStepsRequest$Type, MessageType1);
    var _super = _create_super(GetStepsRequest$Type);
    function GetStepsRequest$Type() {
        _class_call_check(this, GetStepsRequest$Type);
        return _super.call(this, "protos.GetStepsRequest", []);
    }
    return GetStepsRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.GetStepsRequest
 */ export var GetStepsRequest = new GetStepsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var GetStepsResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(GetStepsResponse$Type, MessageType1);
    var _super = _create_super(GetStepsResponse$Type);
    function GetStepsResponse$Type() {
        _class_call_check(this, GetStepsResponse$Type);
        return _super.call(this, "protos.GetStepsResponse", []);
    }
    return GetStepsResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.GetStepsResponse
 */ export var GetStepsResponse = new GetStepsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
var CreateStepRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(CreateStepRequest$Type, MessageType1);
    var _super = _create_super(CreateStepRequest$Type);
    function CreateStepRequest$Type() {
        _class_call_check(this, CreateStepRequest$Type);
        return _super.call(this, "protos.CreateStepRequest", []);
    }
    return CreateStepRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.CreateStepRequest
 */ export var CreateStepRequest = new CreateStepRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var CreateStepResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(CreateStepResponse$Type, MessageType1);
    var _super = _create_super(CreateStepResponse$Type);
    function CreateStepResponse$Type() {
        _class_call_check(this, CreateStepResponse$Type);
        return _super.call(this, "protos.CreateStepResponse", []);
    }
    return CreateStepResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.CreateStepResponse
 */ export var CreateStepResponse = new CreateStepResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
var UpdateStepRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(UpdateStepRequest$Type, MessageType1);
    var _super = _create_super(UpdateStepRequest$Type);
    function UpdateStepRequest$Type() {
        _class_call_check(this, UpdateStepRequest$Type);
        return _super.call(this, "protos.UpdateStepRequest", []);
    }
    return UpdateStepRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.UpdateStepRequest
 */ export var UpdateStepRequest = new UpdateStepRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var UpdateStepResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(UpdateStepResponse$Type, MessageType1);
    var _super = _create_super(UpdateStepResponse$Type);
    function UpdateStepResponse$Type() {
        _class_call_check(this, UpdateStepResponse$Type);
        return _super.call(this, "protos.UpdateStepResponse", []);
    }
    return UpdateStepResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.UpdateStepResponse
 */ export var UpdateStepResponse = new UpdateStepResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
var DeleteStepRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(DeleteStepRequest$Type, MessageType1);
    var _super = _create_super(DeleteStepRequest$Type);
    function DeleteStepRequest$Type() {
        _class_call_check(this, DeleteStepRequest$Type);
        return _super.call(this, "protos.DeleteStepRequest", []);
    }
    return DeleteStepRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.DeleteStepRequest
 */ export var DeleteStepRequest = new DeleteStepRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var DeleteStepResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(DeleteStepResponse$Type, MessageType1);
    var _super = _create_super(DeleteStepResponse$Type);
    function DeleteStepResponse$Type() {
        _class_call_check(this, DeleteStepResponse$Type);
        return _super.call(this, "protos.DeleteStepResponse", []);
    }
    return DeleteStepResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.DeleteStepResponse
 */ export var DeleteStepResponse = new DeleteStepResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
var TestRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(TestRequest$Type, MessageType1);
    var _super = _create_super(TestRequest$Type);
    function TestRequest$Type() {
        _class_call_check(this, TestRequest$Type);
        return _super.call(this, "protos.TestRequest", [
            {
                no: 1,
                name: "input",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            }
        ]);
    }
    return TestRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.TestRequest
 */ export var TestRequest = new TestRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var TestResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(TestResponse$Type, MessageType1);
    var _super = _create_super(TestResponse$Type);
    function TestResponse$Type() {
        _class_call_check(this, TestResponse$Type);
        return _super.call(this, "protos.TestResponse", [
            {
                no: 2,
                name: "output",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            }
        ]);
    }
    return TestResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.TestResponse
 */ export var TestResponse = new TestResponse$Type();
/**
 * @generated ServiceType for protobuf service protos.External
 */ export var External = new ServiceType("protos.External", [
    {
        name: "GetServices",
        options: {},
        I: GetServicesRequest,
        O: GetServicesResponse
    },
    {
        name: "GetService",
        options: {},
        I: GetServiceRequest,
        O: GetServiceResponse
    },
    {
        name: "GetPipelines",
        options: {},
        I: GetPipelinesRequest,
        O: GetPipelinesResponse
    },
    {
        name: "GetPipeline",
        options: {},
        I: GetPipelineRequest,
        O: GetPipelineResponse
    },
    {
        name: "SetPipeline",
        options: {},
        I: SetPipelineRequest,
        O: SetPipelineResponse
    },
    {
        name: "DeletePipeline",
        options: {},
        I: DeletePipelineRequest,
        O: DeletePipelineResponse
    },
    {
        name: "GetSteps",
        options: {},
        I: GetStepsRequest,
        O: GetStepsResponse
    },
    {
        name: "CreateStep",
        options: {},
        I: CreateStepRequest,
        O: CreateStepResponse
    },
    {
        name: "UpdateStep",
        options: {},
        I: UpdateStepRequest,
        O: UpdateStepResponse
    },
    {
        name: "DeleteStep",
        options: {},
        I: DeleteStepRequest,
        O: DeleteStepResponse
    },
    {
        name: "Test",
        options: {},
        I: TestRequest,
        O: TestResponse
    }
]);
