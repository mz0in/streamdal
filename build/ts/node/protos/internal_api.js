// @generated by protobuf-ts 2.9.0 with parameter optimize_code_size
// @generated from protobuf file "internal_api.proto" (package "protos", syntax proto3)
// tslint:disable
function _assert_this_initialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _get_prototype_of(o) {
    _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _get_prototype_of(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _set_prototype_of(subClass, superClass);
}
function _possible_constructor_return(self, call) {
    if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assert_this_initialized(self);
}
function _set_prototype_of(o, p) {
    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _set_prototype_of(o, p);
}
function _type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function _is_native_reflect_construct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _create_super(Derived) {
    var hasNativeReflectConstruct = _is_native_reflect_construct();
    return function _createSuperInternal() {
        var Super = _get_prototype_of(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _get_prototype_of(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possible_constructor_return(this, result);
    };
}
import { StandardResponse } from "./common";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { UnpausePipelineCommand } from "./pipeline";
import { PausePipelineCommand } from "./pipeline";
import { DeletePipelineCommand } from "./pipeline";
import { SetPipelineCommand } from "./pipeline";
export var CommandType;
(function(CommandType) {
    CommandType[CommandType[/**
     * @generated from protobuf enum value: SNITCH_COMMAND_TYPE_UNSET = 0;
     */ "SNITCH_COMMAND_TYPE_UNSET"] = 0] = "SNITCH_COMMAND_TYPE_UNSET";
    CommandType[CommandType[/**
     * Use this to keep connection alive; SDK doesn't need to do anything with this - it's there just to keep things alive
     *
     * @generated from protobuf enum value: SNITCH_COMMAND_TYPE_KEEPALIVE = 1;
     */ "SNITCH_COMMAND_TYPE_KEEPALIVE"] = 1] = "SNITCH_COMMAND_TYPE_KEEPALIVE";
    CommandType[CommandType[/**
     * @generated from protobuf enum value: SNITCH_COMMAND_TYPE_SET_PIPELINE = 2;
     */ "SNITCH_COMMAND_TYPE_SET_PIPELINE"] = 2] = "SNITCH_COMMAND_TYPE_SET_PIPELINE";
    CommandType[CommandType[/**
     * @generated from protobuf enum value: SNITCH_COMMAND_TYPE_DELETE_PIPELINE = 3;
     */ "SNITCH_COMMAND_TYPE_DELETE_PIPELINE"] = 3] = "SNITCH_COMMAND_TYPE_DELETE_PIPELINE";
    CommandType[CommandType[/**
     * @generated from protobuf enum value: SNITCH_COMMAND_TYPE_PAUSE_PIPELINE = 4;
     */ "SNITCH_COMMAND_TYPE_PAUSE_PIPELINE"] = 4] = "SNITCH_COMMAND_TYPE_PAUSE_PIPELINE";
    CommandType[CommandType[/**
     * @generated from protobuf enum value: SNITCH_COMMAND_TYPE_UNPAUSE_PIPELINE = 5;
     */ "SNITCH_COMMAND_TYPE_UNPAUSE_PIPELINE"] = 5] = "SNITCH_COMMAND_TYPE_UNPAUSE_PIPELINE";
})(CommandType || (CommandType = {}));
export var OperationType;
(function(OperationType) {
    OperationType[OperationType[/**
     * @generated from protobuf enum value: OPERATION_TYPE_UNSET = 0;
     */ "UNSET"] = 0] = "UNSET";
    OperationType[OperationType[/**
     * @generated from protobuf enum value: OPERATION_TYPE_CONSUMER = 1;
     */ "CONSUMER"] = 1] = "CONSUMER";
    OperationType[OperationType[/**
     * @generated from protobuf enum value: OPERATION_TYPE_PRODUCER = 2;
     */ "PRODUCER"] = 2] = "PRODUCER";
})(OperationType || (OperationType = {}));
// @generated message type with reflection information, may provide speed optimized methods
var HeartbeatRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(HeartbeatRequest$Type, MessageType1);
    var _super = _create_super(HeartbeatRequest$Type);
    function HeartbeatRequest$Type() {
        _class_call_check(this, HeartbeatRequest$Type);
        return _super.call(this, "protos.HeartbeatRequest", [
            {
                no: 1,
                name: "audience",
                kind: "message",
                T: function() {
                    return Audience;
                }
            },
            {
                no: 2,
                name: "last_activity_unix_timestamp_utc",
                kind: "scalar",
                T: 3 /*ScalarType.INT64*/ ,
                L: 0 /*LongType.BIGINT*/ 
            },
            {
                no: 1000,
                name: "_metadata",
                kind: "map",
                K: 9 /*ScalarType.STRING*/ ,
                V: {
                    kind: "scalar",
                    T: 9 /*ScalarType.STRING*/ 
                }
            }
        ]);
    }
    return HeartbeatRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.HeartbeatRequest
 */ export var HeartbeatRequest = new HeartbeatRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var NotifyRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(NotifyRequest$Type, MessageType1);
    var _super = _create_super(NotifyRequest$Type);
    function NotifyRequest$Type() {
        _class_call_check(this, NotifyRequest$Type);
        return _super.call(this, "protos.NotifyRequest", [
            {
                no: 1,
                name: "rule_id",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            },
            {
                no: 2,
                name: "rule_name",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            },
            {
                no: 3,
                name: "audience",
                kind: "message",
                T: function() {
                    return Audience;
                }
            },
            {
                no: 4,
                name: "occurred_at_unix_ts_utc",
                kind: "scalar",
                T: 3 /*ScalarType.INT64*/ ,
                L: 0 /*LongType.BIGINT*/ 
            },
            {
                no: 1000,
                name: "_metadata",
                kind: "map",
                K: 9 /*ScalarType.STRING*/ ,
                V: {
                    kind: "scalar",
                    T: 9 /*ScalarType.STRING*/ 
                }
            }
        ]);
    }
    return NotifyRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.NotifyRequest
 */ export var NotifyRequest = new NotifyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var MetricsRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(MetricsRequest$Type, MessageType1);
    var _super = _create_super(MetricsRequest$Type);
    function MetricsRequest$Type() {
        _class_call_check(this, MetricsRequest$Type);
        return _super.call(this, "protos.MetricsRequest", [
            {
                no: 1,
                name: "rule_id",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            },
            {
                no: 2,
                name: "rule_name",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            },
            {
                no: 3,
                name: "audience",
                kind: "message",
                T: function() {
                    return Audience;
                }
            },
            {
                no: 1000,
                name: "_metadata",
                kind: "map",
                K: 9 /*ScalarType.STRING*/ ,
                V: {
                    kind: "scalar",
                    T: 9 /*ScalarType.STRING*/ 
                }
            }
        ]);
    }
    return MetricsRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.MetricsRequest
 */ export var MetricsRequest = new MetricsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var RegisterRequest$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(RegisterRequest$Type, MessageType1);
    var _super = _create_super(RegisterRequest$Type);
    function RegisterRequest$Type() {
        _class_call_check(this, RegisterRequest$Type);
        return _super.call(this, "protos.RegisterRequest", [
            {
                no: 1,
                name: "service_name",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            },
            {
                no: 2,
                name: "dry_run",
                kind: "scalar",
                T: 8 /*ScalarType.BOOL*/ 
            },
            {
                no: 1000,
                name: "_metadata",
                kind: "map",
                K: 9 /*ScalarType.STRING*/ ,
                V: {
                    kind: "scalar",
                    T: 9 /*ScalarType.STRING*/ 
                }
            }
        ]);
    }
    return RegisterRequest$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.RegisterRequest
 */ export var RegisterRequest = new RegisterRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
var BusEvent$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(BusEvent$Type, MessageType1);
    var _super = _create_super(BusEvent$Type);
    function BusEvent$Type() {
        _class_call_check(this, BusEvent$Type);
        return _super.call(this, "protos.BusEvent", [
            {
                no: 1,
                name: "request_id",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            },
            {
                no: 2,
                name: "source",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            },
            {
                no: 100,
                name: "command_response",
                kind: "message",
                oneof: "event",
                T: function() {
                    return CommandResponse;
                }
            },
            {
                no: 101,
                name: "register_request",
                kind: "message",
                oneof: "event",
                T: function() {
                    return RegisterRequest;
                }
            },
            {
                no: 1000,
                name: "_metadata",
                kind: "map",
                K: 9 /*ScalarType.STRING*/ ,
                V: {
                    kind: "scalar",
                    T: 9 /*ScalarType.STRING*/ 
                }
            }
        ]);
    }
    return BusEvent$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.BusEvent
 */ export var BusEvent = new BusEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
var CommandResponse$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(CommandResponse$Type, MessageType1);
    var _super = _create_super(CommandResponse$Type);
    function CommandResponse$Type() {
        _class_call_check(this, CommandResponse$Type);
        return _super.call(this, "protos.CommandResponse", [
            {
                no: 1,
                name: "audience",
                kind: "message",
                T: function() {
                    return Audience;
                }
            },
            {
                no: 100,
                name: "set_pipeline",
                kind: "message",
                oneof: "command",
                T: function() {
                    return SetPipelineCommand;
                }
            },
            {
                no: 101,
                name: "delete_pipeline",
                kind: "message",
                oneof: "command",
                T: function() {
                    return DeletePipelineCommand;
                }
            },
            {
                no: 102,
                name: "pause_pipeline",
                kind: "message",
                oneof: "command",
                T: function() {
                    return PausePipelineCommand;
                }
            },
            {
                no: 103,
                name: "unpause_pipeline",
                kind: "message",
                oneof: "command",
                T: function() {
                    return UnpausePipelineCommand;
                }
            },
            {
                no: 1000,
                name: "_metadata",
                kind: "map",
                K: 9 /*ScalarType.STRING*/ ,
                V: {
                    kind: "scalar",
                    T: 9 /*ScalarType.STRING*/ 
                }
            }
        ]);
    }
    return CommandResponse$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.CommandResponse
 */ export var CommandResponse = new CommandResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
var Audience$Type = /*#__PURE__*/ function(MessageType1) {
    "use strict";
    _inherits(Audience$Type, MessageType1);
    var _super = _create_super(Audience$Type);
    function Audience$Type() {
        _class_call_check(this, Audience$Type);
        return _super.call(this, "protos.Audience", [
            {
                no: 1,
                name: "service_name",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            },
            {
                no: 2,
                name: "component_name",
                kind: "scalar",
                T: 9 /*ScalarType.STRING*/ 
            },
            {
                no: 3,
                name: "operation_type",
                kind: "enum",
                T: function() {
                    return [
                        "protos.OperationType",
                        OperationType,
                        "OPERATION_TYPE_"
                    ];
                }
            }
        ]);
    }
    return Audience$Type;
}(MessageType);
/**
 * @generated MessageType for protobuf message protos.Audience
 */ export var Audience = new Audience$Type();
/**
 * @generated ServiceType for protobuf service protos.Internal
 */ export var Internal = new ServiceType("protos.Internal", [
    {
        name: "Register",
        serverStreaming: true,
        options: {},
        I: RegisterRequest,
        O: CommandResponse
    },
    {
        name: "Heartbeat",
        options: {},
        I: HeartbeatRequest,
        O: StandardResponse
    },
    {
        name: "Notify",
        options: {},
        I: NotifyRequest,
        O: StandardResponse
    },
    {
        name: "Metrics",
        options: {},
        I: MetricsRequest,
        O: StandardResponse
    }
]);
