syntax = "proto3";

package protos;

import "sp_pipeline.proto";

option go_package = "github.com/streamdal/snitch-protos/build/go/protos";

// Included in WASM response; the SDK should use the WASMExitCode to determine
// what to do next - should it execute next step, should it notify or should it
// stop executing/abort the rest of the steps in the pipeline.
//
// Example:
//
// a. WASM func returns WASM_EXIT_CODE_FAILURE - read PipelineStep.on_failure
// conditions to determine what to do next.
//
// b. WASM func returns WASM_EXIT_CODE_SUCCESS - read PipelineStep.on_success
// conditions to determine what to do next.
//
// .. and so on.
// protolint:disable:next ENUM_FIELD_NAMES_PREFIX
enum WASMExitCode {
  WASM_EXIT_CODE_UNSET = 0;
  WASM_EXIT_CODE_SUCCESS = 1;
  WASM_EXIT_CODE_FAILURE = 2; // Probably need better names for these as FAILURE is too harsh
  WASM_EXIT_CODE_INTERNAL_ERROR = 3;
}

// SDK generates a WASM request and passes this to the WASM func
message WASMRequest {
  protos.PipelineStep step = 1;
  bytes input = 2;
}

// Returned by all WASM functions
message WASMResponse {
  bytes output = 1;
  WASMExitCode exit_code = 2;
  string exit_msg = 3;
}
