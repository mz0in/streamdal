// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: pipeline.proto

package protos

import (
	steps "github.com/streamdal/snitch-protos/build/go/protos/steps"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Included in WASM response; SDK is responsible for interpreting the response
// status and how it relates to the step condition.
// ie. WASM func returns WASM_EXIT_CODE_INTERNAL_ERROR lookup ON_ERROR
// conditions to determine what to do next.
// ie. WASM func returns WASM_EXIT_CODE_SUCCESS lookup ON_MATCH conditions
// to determine what to do next;
type WASMExitCode int32

const (
	WASMExitCode_WASM_EXIT_CODE_UNSET          WASMExitCode = 0
	WASMExitCode_WASM_EXIT_CODE_SUCCESS        WASMExitCode = 1
	WASMExitCode_WASM_EXIT_CODE_FAILURE        WASMExitCode = 2 // Probably need better names for these as FAILURE is too harsh
	WASMExitCode_WASM_EXIT_CODE_INTERNAL_ERROR WASMExitCode = 3
)

// Enum value maps for WASMExitCode.
var (
	WASMExitCode_name = map[int32]string{
		0: "WASM_EXIT_CODE_UNSET",
		1: "WASM_EXIT_CODE_SUCCESS",
		2: "WASM_EXIT_CODE_FAILURE",
		3: "WASM_EXIT_CODE_INTERNAL_ERROR",
	}
	WASMExitCode_value = map[string]int32{
		"WASM_EXIT_CODE_UNSET":          0,
		"WASM_EXIT_CODE_SUCCESS":        1,
		"WASM_EXIT_CODE_FAILURE":        2,
		"WASM_EXIT_CODE_INTERNAL_ERROR": 3,
	}
)

func (x WASMExitCode) Enum() *WASMExitCode {
	p := new(WASMExitCode)
	*p = x
	return p
}

func (x WASMExitCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WASMExitCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pipeline_proto_enumTypes[0].Descriptor()
}

func (WASMExitCode) Type() protoreflect.EnumType {
	return &file_pipeline_proto_enumTypes[0]
}

func (x WASMExitCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WASMExitCode.Descriptor instead.
func (WASMExitCode) EnumDescriptor() ([]byte, []int) {
	return file_pipeline_proto_rawDescGZIP(), []int{0}
}

// A condition defines how the SDK should handle a step response -- should it
// continue executing the pipeline, should it abort, should it notify the server?
// Each step can have multiple conditions.
type PipelineStepCondition int32

const (
	PipelineStepCondition_CONDITION_UNSET    PipelineStepCondition = 0
	PipelineStepCondition_CONDITION_CONTINUE PipelineStepCondition = 1
	PipelineStepCondition_CONDITION_ABORT    PipelineStepCondition = 2
	PipelineStepCondition_CONDITION_NOTIFY   PipelineStepCondition = 3
)

// Enum value maps for PipelineStepCondition.
var (
	PipelineStepCondition_name = map[int32]string{
		0: "CONDITION_UNSET",
		1: "CONDITION_CONTINUE",
		2: "CONDITION_ABORT",
		3: "CONDITION_NOTIFY",
	}
	PipelineStepCondition_value = map[string]int32{
		"CONDITION_UNSET":    0,
		"CONDITION_CONTINUE": 1,
		"CONDITION_ABORT":    2,
		"CONDITION_NOTIFY":   3,
	}
)

func (x PipelineStepCondition) Enum() *PipelineStepCondition {
	p := new(PipelineStepCondition)
	*p = x
	return p
}

func (x PipelineStepCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipelineStepCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_pipeline_proto_enumTypes[1].Descriptor()
}

func (PipelineStepCondition) Type() protoreflect.EnumType {
	return &file_pipeline_proto_enumTypes[1]
}

func (x PipelineStepCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PipelineStepCondition.Descriptor instead.
func (PipelineStepCondition) EnumDescriptor() ([]byte, []int) {
	return file_pipeline_proto_rawDescGZIP(), []int{1}
}

// SDK generates a WASM request and passes this to the WASM func
type WASMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step  *PipelineStep `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`
	Input []byte        `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *WASMRequest) Reset() {
	*x = WASMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipeline_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WASMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WASMRequest) ProtoMessage() {}

func (x *WASMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WASMRequest.ProtoReflect.Descriptor instead.
func (*WASMRequest) Descriptor() ([]byte, []int) {
	return file_pipeline_proto_rawDescGZIP(), []int{0}
}

func (x *WASMRequest) GetStep() *PipelineStep {
	if x != nil {
		return x.Step
	}
	return nil
}

func (x *WASMRequest) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

// Returned by all WASM functions
type WASMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output   []byte       `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	ExitCode WASMExitCode `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3,enum=protos.WASMExitCode" json:"exit_code,omitempty"`
	ExitMsg  string       `protobuf:"bytes,3,opt,name=exit_msg,json=exitMsg,proto3" json:"exit_msg,omitempty"`
}

func (x *WASMResponse) Reset() {
	*x = WASMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipeline_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WASMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WASMResponse) ProtoMessage() {}

func (x *WASMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WASMResponse.ProtoReflect.Descriptor instead.
func (*WASMResponse) Descriptor() ([]byte, []int) {
	return file_pipeline_proto_rawDescGZIP(), []int{1}
}

func (x *WASMResponse) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *WASMResponse) GetExitCode() WASMExitCode {
	if x != nil {
		return x.ExitCode
	}
	return WASMExitCode_WASM_EXIT_CODE_UNSET
}

func (x *WASMResponse) GetExitMsg() string {
	if x != nil {
		return x.ExitMsg
	}
	return ""
}

// A PipelineCommand consists of one or more pipeline steps. A pipeline step
// is an immutable set of instructions on how to execute a step.
// The SDK will use the pipeline step to generate a WASM request.
type PipelineStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID for the step
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Friendly name for the step
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Conditions that SDK should check before executing next step
	Conditions []PipelineStepCondition `protobuf:"varint,3,rep,packed,name=conditions,proto3,enum=protos.PipelineStepCondition" json:"conditions,omitempty"`
	// Types that are assignable to Step:
	//
	//	*PipelineStep_Detective
	//	*PipelineStep_Transform
	//	*PipelineStep_Encode
	//	*PipelineStep_Decode
	//	*PipelineStep_Custom
	Step isPipelineStep_Step `protobuf_oneof:"step"`
	// WASM module ID (set by backend)
	XWasmId string `protobuf:"bytes,10000,opt,name=_wasm_id,json=WasmId,proto3" json:"_wasm_id,omitempty"`
	// WASM module bytes (set by backend)
	XWasmBytes []byte `protobuf:"bytes,10001,opt,name=_wasm_bytes,json=WasmBytes,proto3" json:"_wasm_bytes,omitempty"`
	// WASM function name to execute (set by backend)
	XWasmFunction string `protobuf:"bytes,10002,opt,name=_wasm_function,json=WasmFunction,proto3" json:"_wasm_function,omitempty"`
}

func (x *PipelineStep) Reset() {
	*x = PipelineStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipeline_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineStep) ProtoMessage() {}

func (x *PipelineStep) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineStep.ProtoReflect.Descriptor instead.
func (*PipelineStep) Descriptor() ([]byte, []int) {
	return file_pipeline_proto_rawDescGZIP(), []int{2}
}

func (x *PipelineStep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PipelineStep) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineStep) GetConditions() []PipelineStepCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (m *PipelineStep) GetStep() isPipelineStep_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (x *PipelineStep) GetDetective() *steps.DetectiveStep {
	if x, ok := x.GetStep().(*PipelineStep_Detective); ok {
		return x.Detective
	}
	return nil
}

func (x *PipelineStep) GetTransform() *steps.TransformStep {
	if x, ok := x.GetStep().(*PipelineStep_Transform); ok {
		return x.Transform
	}
	return nil
}

func (x *PipelineStep) GetEncode() *steps.EncodeStep {
	if x, ok := x.GetStep().(*PipelineStep_Encode); ok {
		return x.Encode
	}
	return nil
}

func (x *PipelineStep) GetDecode() *steps.DecodeStep {
	if x, ok := x.GetStep().(*PipelineStep_Decode); ok {
		return x.Decode
	}
	return nil
}

func (x *PipelineStep) GetCustom() *steps.CustomStep {
	if x, ok := x.GetStep().(*PipelineStep_Custom); ok {
		return x.Custom
	}
	return nil
}

func (x *PipelineStep) GetXWasmId() string {
	if x != nil {
		return x.XWasmId
	}
	return ""
}

func (x *PipelineStep) GetXWasmBytes() []byte {
	if x != nil {
		return x.XWasmBytes
	}
	return nil
}

func (x *PipelineStep) GetXWasmFunction() string {
	if x != nil {
		return x.XWasmFunction
	}
	return ""
}

type isPipelineStep_Step interface {
	isPipelineStep_Step()
}

type PipelineStep_Detective struct {
	Detective *steps.DetectiveStep `protobuf:"bytes,1000,opt,name=detective,proto3,oneof"`
}

type PipelineStep_Transform struct {
	Transform *steps.TransformStep `protobuf:"bytes,1001,opt,name=transform,proto3,oneof"`
}

type PipelineStep_Encode struct {
	Encode *steps.EncodeStep `protobuf:"bytes,1002,opt,name=encode,proto3,oneof"`
}

type PipelineStep_Decode struct {
	Decode *steps.DecodeStep `protobuf:"bytes,1003,opt,name=decode,proto3,oneof"`
}

type PipelineStep_Custom struct {
	Custom *steps.CustomStep `protobuf:"bytes,1004,opt,name=custom,proto3,oneof"`
}

func (*PipelineStep_Detective) isPipelineStep_Step() {}

func (*PipelineStep_Transform) isPipelineStep_Step() {}

func (*PipelineStep_Encode) isPipelineStep_Step() {}

func (*PipelineStep_Decode) isPipelineStep_Step() {}

func (*PipelineStep_Custom) isPipelineStep_Step() {}

// Used for both Add and Update
type SetPipelineCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID for the pipeline
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Friendly name for the pipeline
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// One or more steps to execute
	Steps []*PipelineStep `protobuf:"bytes,3,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *SetPipelineCommand) Reset() {
	*x = SetPipelineCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipeline_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPipelineCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPipelineCommand) ProtoMessage() {}

func (x *SetPipelineCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPipelineCommand.ProtoReflect.Descriptor instead.
func (*SetPipelineCommand) Descriptor() ([]byte, []int) {
	return file_pipeline_proto_rawDescGZIP(), []int{3}
}

func (x *SetPipelineCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetPipelineCommand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetPipelineCommand) GetSteps() []*PipelineStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

type DeletePipelineCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID for the pipeline
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePipelineCommand) Reset() {
	*x = DeletePipelineCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipeline_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePipelineCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePipelineCommand) ProtoMessage() {}

func (x *DeletePipelineCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePipelineCommand.ProtoReflect.Descriptor instead.
func (*DeletePipelineCommand) Descriptor() ([]byte, []int) {
	return file_pipeline_proto_rawDescGZIP(), []int{4}
}

func (x *DeletePipelineCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PausePipelineCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID for the pipeline
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PausePipelineCommand) Reset() {
	*x = PausePipelineCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipeline_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PausePipelineCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PausePipelineCommand) ProtoMessage() {}

func (x *PausePipelineCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PausePipelineCommand.ProtoReflect.Descriptor instead.
func (*PausePipelineCommand) Descriptor() ([]byte, []int) {
	return file_pipeline_proto_rawDescGZIP(), []int{5}
}

func (x *PausePipelineCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnpausePipelineCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID for the pipeline
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnpausePipelineCommand) Reset() {
	*x = UnpausePipelineCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipeline_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpausePipelineCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpausePipelineCommand) ProtoMessage() {}

func (x *UnpausePipelineCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpausePipelineCommand.ProtoReflect.Descriptor instead.
func (*UnpausePipelineCommand) Descriptor() ([]byte, []int) {
	return file_pipeline_proto_rawDescGZIP(), []int{6}
}

func (x *UnpausePipelineCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_pipeline_proto protoreflect.FileDescriptor

var file_pipeline_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x12, 0x73, 0x74, 0x65, 0x70, 0x73, 0x2f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x74,
	0x65, 0x70, 0x73, 0x2f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x73, 0x74, 0x65, 0x70, 0x73, 0x2f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x74, 0x65, 0x70, 0x73, 0x2f, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x0b, 0x57, 0x41, 0x53, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x22, 0x74, 0x0a, 0x0c, 0x57, 0x41, 0x53, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x65, 0x78, 0x69,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x57, 0x41, 0x53, 0x4d, 0x45, 0x78, 0x69, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x78, 0x69, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x78, 0x69, 0x74, 0x4d, 0x73, 0x67, 0x22, 0xf7, 0x03, 0x0a, 0x0c, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x65, 0x70, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x2e, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x65, 0x70, 0x48, 0x00, 0x52, 0x09,
	0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x74, 0x65, 0x70, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x33, 0x0a, 0x06, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x48, 0x00, 0x52, 0x06, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x06,
	0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x2e, 0x44, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x65, 0x70, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0xec, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x65, 0x70,
	0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x65, 0x70, 0x48, 0x00, 0x52, 0x06,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x5f, 0x77, 0x61, 0x73, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x90, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x61, 0x73, 0x6d, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x5f, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x57, 0x61, 0x73, 0x6d, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x5f, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x92, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x57, 0x61, 0x73,
	0x6d, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x22, 0x64, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x26, 0x0a, 0x14, 0x50, 0x61, 0x75, 0x73, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x55, 0x6e, 0x70, 0x61,
	0x75, 0x73, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x2a, 0x83, 0x01, 0x0a, 0x0c, 0x57, 0x41, 0x53, 0x4d, 0x45, 0x78, 0x69, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x41, 0x53, 0x4d, 0x5f, 0x45, 0x58, 0x49, 0x54,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x1a, 0x0a,
	0x16, 0x57, 0x41, 0x53, 0x4d, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x41, 0x53,
	0x4d, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x55, 0x52, 0x45, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x57, 0x41, 0x53, 0x4d, 0x5f, 0x45, 0x58,
	0x49, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x2a, 0x6f, 0x0a, 0x15, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x65, 0x70, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55,
	0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55, 0x45, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x42, 0x4f, 0x52,
	0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x03, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x61,
	0x6c, 0x2f, 0x73, 0x6e, 0x69, 0x74, 0x63, 0x68, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pipeline_proto_rawDescOnce sync.Once
	file_pipeline_proto_rawDescData = file_pipeline_proto_rawDesc
)

func file_pipeline_proto_rawDescGZIP() []byte {
	file_pipeline_proto_rawDescOnce.Do(func() {
		file_pipeline_proto_rawDescData = protoimpl.X.CompressGZIP(file_pipeline_proto_rawDescData)
	})
	return file_pipeline_proto_rawDescData
}

var file_pipeline_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pipeline_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pipeline_proto_goTypes = []interface{}{
	(WASMExitCode)(0),              // 0: protos.WASMExitCode
	(PipelineStepCondition)(0),     // 1: protos.PipelineStepCondition
	(*WASMRequest)(nil),            // 2: protos.WASMRequest
	(*WASMResponse)(nil),           // 3: protos.WASMResponse
	(*PipelineStep)(nil),           // 4: protos.PipelineStep
	(*SetPipelineCommand)(nil),     // 5: protos.SetPipelineCommand
	(*DeletePipelineCommand)(nil),  // 6: protos.DeletePipelineCommand
	(*PausePipelineCommand)(nil),   // 7: protos.PausePipelineCommand
	(*UnpausePipelineCommand)(nil), // 8: protos.UnpausePipelineCommand
	(*steps.DetectiveStep)(nil),    // 9: protos.steps.DetectiveStep
	(*steps.TransformStep)(nil),    // 10: protos.steps.TransformStep
	(*steps.EncodeStep)(nil),       // 11: protos.steps.EncodeStep
	(*steps.DecodeStep)(nil),       // 12: protos.steps.DecodeStep
	(*steps.CustomStep)(nil),       // 13: protos.steps.CustomStep
}
var file_pipeline_proto_depIdxs = []int32{
	4,  // 0: protos.WASMRequest.step:type_name -> protos.PipelineStep
	0,  // 1: protos.WASMResponse.exit_code:type_name -> protos.WASMExitCode
	1,  // 2: protos.PipelineStep.conditions:type_name -> protos.PipelineStepCondition
	9,  // 3: protos.PipelineStep.detective:type_name -> protos.steps.DetectiveStep
	10, // 4: protos.PipelineStep.transform:type_name -> protos.steps.TransformStep
	11, // 5: protos.PipelineStep.encode:type_name -> protos.steps.EncodeStep
	12, // 6: protos.PipelineStep.decode:type_name -> protos.steps.DecodeStep
	13, // 7: protos.PipelineStep.custom:type_name -> protos.steps.CustomStep
	4,  // 8: protos.SetPipelineCommand.steps:type_name -> protos.PipelineStep
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_pipeline_proto_init() }
func file_pipeline_proto_init() {
	if File_pipeline_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pipeline_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WASMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipeline_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WASMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipeline_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipeline_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPipelineCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipeline_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePipelineCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipeline_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PausePipelineCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipeline_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpausePipelineCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pipeline_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*PipelineStep_Detective)(nil),
		(*PipelineStep_Transform)(nil),
		(*PipelineStep_Encode)(nil),
		(*PipelineStep_Decode)(nil),
		(*PipelineStep_Custom)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pipeline_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pipeline_proto_goTypes,
		DependencyIndexes: file_pipeline_proto_depIdxs,
		EnumInfos:         file_pipeline_proto_enumTypes,
		MessageInfos:      file_pipeline_proto_msgTypes,
	}.Build()
	File_pipeline_proto = out.File
	file_pipeline_proto_rawDesc = nil
	file_pipeline_proto_goTypes = nil
	file_pipeline_proto_depIdxs = nil
}
