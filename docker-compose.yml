version: "3"
services:
  snitch-server:
    build: .
    environment:
       RABBITMQ_URL: "amqp://rabbitmq"
    container_name: snitch-server
    links:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3.7.8-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./backend-data/rabbitmq:/var/lib/rabbitmq
    container_name: rabbitmq

  natsjs:
    image: nats:2.8.1-alpine3.15
    ports:
      - "4222:4222" # NATS Port
      - "6222:6222"
      - "8222:8222" # HTTP Monitor
    volumes:
      - ${PWD}/backend-data/jetstream:/data/jetstream
      - ${PWD}/assets/nats-server.conf:/etc/nats/nats-server.conf

  zookeeper:
    image: antrea/confluentinc-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: antrea/confluentinc-kafka:6.2.0
    hostname: kafka
    container_name: kafka
    ports:
      - '9092:9092'
      - '9101:9101'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      # NOTE: Not supported by current container
      # KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    depends_on:
      - zookeeper

  # Kafka UI
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

  postgres:
    image: bitnami/postgresql:10.13.0
    ports:
      - "5432:5432"
    volumes:
      - ./backend-data/postgres:/bitnami/postgresql
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    container_name: postgres
