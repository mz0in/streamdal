// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: auditlog.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuditLog_Resource int32

const (
	AuditLog_UNSET       AuditLog_Resource = 0
	AuditLog_COLLECTION  AuditLog_Resource = 1
	AuditLog_REPLAY      AuditLog_Resource = 2
	AuditLog_STORAGE     AuditLog_Resource = 3
	AuditLog_DESTINATION AuditLog_Resource = 4
	AuditLog_SCHEMA      AuditLog_Resource = 5
	AuditLog_SEARCH      AuditLog_Resource = 6
	// Deprecated: Do not use.
	AuditLog_TASK        AuditLog_Resource = 7
	AuditLog_BILLING     AuditLog_Resource = 8
	AuditLog_FUNCTION    AuditLog_Resource = 9
	AuditLog_MONITOR     AuditLog_Resource = 10
	AuditLog_DEAD_LETTER AuditLog_Resource = 11
)

// Enum value maps for AuditLog_Resource.
var (
	AuditLog_Resource_name = map[int32]string{
		0:  "UNSET",
		1:  "COLLECTION",
		2:  "REPLAY",
		3:  "STORAGE",
		4:  "DESTINATION",
		5:  "SCHEMA",
		6:  "SEARCH",
		7:  "TASK",
		8:  "BILLING",
		9:  "FUNCTION",
		10: "MONITOR",
		11: "DEAD_LETTER",
	}
	AuditLog_Resource_value = map[string]int32{
		"UNSET":       0,
		"COLLECTION":  1,
		"REPLAY":      2,
		"STORAGE":     3,
		"DESTINATION": 4,
		"SCHEMA":      5,
		"SEARCH":      6,
		"TASK":        7,
		"BILLING":     8,
		"FUNCTION":    9,
		"MONITOR":     10,
		"DEAD_LETTER": 11,
	}
)

func (x AuditLog_Resource) Enum() *AuditLog_Resource {
	p := new(AuditLog_Resource)
	*p = x
	return p
}

func (x AuditLog_Resource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditLog_Resource) Descriptor() protoreflect.EnumDescriptor {
	return file_auditlog_proto_enumTypes[0].Descriptor()
}

func (AuditLog_Resource) Type() protoreflect.EnumType {
	return &file_auditlog_proto_enumTypes[0]
}

func (x AuditLog_Resource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditLog_Resource.Descriptor instead.
func (AuditLog_Resource) EnumDescriptor() ([]byte, []int) {
	return file_auditlog_proto_rawDescGZIP(), []int{0, 0}
}

type AuditLog_Type int32

const (
	AuditLog_UNKNOWN AuditLog_Type = 0
	AuditLog_INFO    AuditLog_Type = 1
	AuditLog_WARNING AuditLog_Type = 2
	AuditLog_ERROR   AuditLog_Type = 3
	AuditLog_FATAL   AuditLog_Type = 4
)

// Enum value maps for AuditLog_Type.
var (
	AuditLog_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "INFO",
		2: "WARNING",
		3: "ERROR",
		4: "FATAL",
	}
	AuditLog_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"INFO":    1,
		"WARNING": 2,
		"ERROR":   3,
		"FATAL":   4,
	}
)

func (x AuditLog_Type) Enum() *AuditLog_Type {
	p := new(AuditLog_Type)
	*p = x
	return p
}

func (x AuditLog_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditLog_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_auditlog_proto_enumTypes[1].Descriptor()
}

func (AuditLog_Type) Type() protoreflect.EnumType {
	return &file_auditlog_proto_enumTypes[1]
}

func (x AuditLog_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditLog_Type.Descriptor instead.
func (AuditLog_Type) EnumDescriptor() ([]byte, []int) {
	return file_auditlog_proto_rawDescGZIP(), []int{0, 1}
}

// Used for internal error reporting using mlib library and metrics service.
type AuditLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId         string            `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Resource       AuditLog_Resource `protobuf:"varint,3,opt,name=resource,proto3,enum=metrics.AuditLog_Resource" json:"resource,omitempty"`
	Source         string            `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Value          string            `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp      int64             `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Count          int64             `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	Type           AuditLog_Type     `protobuf:"varint,8,opt,name=type,proto3,enum=metrics.AuditLog_Type" json:"type,omitempty"`
	Metadata       []byte            `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	AccountId      string            `protobuf:"bytes,10,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ParentResource AuditLog_Resource `protobuf:"varint,11,opt,name=parent_resource,json=parentResource,proto3,enum=metrics.AuditLog_Resource" json:"parent_resource,omitempty"`
	ParentId       string            `protobuf:"bytes,12,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
}

func (x *AuditLog) Reset() {
	*x = AuditLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auditlog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLog) ProtoMessage() {}

func (x *AuditLog) ProtoReflect() protoreflect.Message {
	mi := &file_auditlog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLog.ProtoReflect.Descriptor instead.
func (*AuditLog) Descriptor() ([]byte, []int) {
	return file_auditlog_proto_rawDescGZIP(), []int{0}
}

func (x *AuditLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuditLog) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *AuditLog) GetResource() AuditLog_Resource {
	if x != nil {
		return x.Resource
	}
	return AuditLog_UNSET
}

func (x *AuditLog) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *AuditLog) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AuditLog) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AuditLog) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AuditLog) GetType() AuditLog_Type {
	if x != nil {
		return x.Type
	}
	return AuditLog_UNKNOWN
}

func (x *AuditLog) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AuditLog) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AuditLog) GetParentResource() AuditLog_Resource {
	if x != nil {
		return x.ParentResource
	}
	return AuditLog_UNSET
}

func (x *AuditLog) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

var File_auditlog_proto protoreflect.FileDescriptor

var file_auditlog_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x89, 0x05, 0x0a, 0x08, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x36, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x43, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f,
	0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45,
	0x50, 0x4c, 0x41, 0x59, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47,
	0x45, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x10, 0x05,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x04,
	0x54, 0x41, 0x53, 0x4b, 0x10, 0x07, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x49,
	0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x55, 0x4e, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x49, 0x54, 0x4f, 0x52,
	0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x4c, 0x45, 0x54, 0x54, 0x45,
	0x52, 0x10, 0x0b, 0x22, 0x40, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41,
	0x54, 0x41, 0x4c, 0x10, 0x04, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x63, 0x6f, 0x72, 0x70, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auditlog_proto_rawDescOnce sync.Once
	file_auditlog_proto_rawDescData = file_auditlog_proto_rawDesc
)

func file_auditlog_proto_rawDescGZIP() []byte {
	file_auditlog_proto_rawDescOnce.Do(func() {
		file_auditlog_proto_rawDescData = protoimpl.X.CompressGZIP(file_auditlog_proto_rawDescData)
	})
	return file_auditlog_proto_rawDescData
}

var file_auditlog_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_auditlog_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_auditlog_proto_goTypes = []interface{}{
	(AuditLog_Resource)(0), // 0: metrics.AuditLog.Resource
	(AuditLog_Type)(0),     // 1: metrics.AuditLog.Type
	(*AuditLog)(nil),       // 2: metrics.AuditLog
}
var file_auditlog_proto_depIdxs = []int32{
	0, // 0: metrics.AuditLog.resource:type_name -> metrics.AuditLog.Resource
	1, // 1: metrics.AuditLog.type:type_name -> metrics.AuditLog.Type
	0, // 2: metrics.AuditLog.parent_resource:type_name -> metrics.AuditLog.Resource
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_auditlog_proto_init() }
func file_auditlog_proto_init() {
	if File_auditlog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auditlog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auditlog_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_auditlog_proto_goTypes,
		DependencyIndexes: file_auditlog_proto_depIdxs,
		EnumInfos:         file_auditlog_proto_enumTypes,
		MessageInfos:      file_auditlog_proto_msgTypes,
	}.Build()
	File_auditlog_proto = out.File
	file_auditlog_proto_rawDesc = nil
	file_auditlog_proto_goTypes = nil
	file_auditlog_proto_depIdxs = nil
}
