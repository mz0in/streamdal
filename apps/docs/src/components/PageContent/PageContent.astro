---
import type { MarkdownHeading } from "astro";

import ArticleNavigationButton from "./ArticleNavigationButton.astro";
import TableOfContents from "../RightSidebar/TableOfContents";
import type { Frontmatter } from "../../config";
import { getNav, getLanguageFromURL } from "../../util";

type Props = {
  frontmatter: Frontmatter;
  headings: MarkdownHeading[];
  currentPage: string;
};

const { frontmatter, headings, currentPage } = Astro.props as Props;
const title = frontmatter.title;
const links = getNav(Astro);
// filtering out the '' generated by the `/` being in the start and end
const currentSlug = currentPage
  .split("/")
  .filter((elm) => elm !== "")
  .at(-1);
const index = links.findIndex(
  (x) => x?.slug?.toLocaleLowerCase() === currentSlug
);
let next, previous;
if (index > 0) previous = links[index - 1];
if (index !== -1 && index < links.length - 1) next = links[index + 1];
---

<article id="article" class="content">
  <section class="main-section">
    <h1 class="content-title" id="overview">{title}</h1>
    <nav class="block sm:hidden">
      <TableOfContents client:media="(max-width: 50em)" headings={headings} />
    </nav>
    <slot />
  </section>
  {
    (previous || next) && (
      <aside class="next-previous-nav">
        {previous && <ArticleNavigationButton rel="prev" item={previous} />}
        {next && <ArticleNavigationButton rel="next" item={next} />}
      </aside>
    )
  }
</article>

<style>
  .content {
    padding-top: calc(
      var(--theme-navbar-height) + var(--theme-mobile-toc-height) +
        var(--doc-padding-block)
    );
    padding-bottom: var(--doc-padding-block);
    padding-inline: var(--min-spacing-inline);
    width: 100%;
    height: 100%;
    max-width: 80ch;
    margin-inline: auto;
    display: flex;
    flex-direction: column;
    overflow-x: hidden;
  }

  .content > section {
    margin-bottom: 4rem;
  }

  .next-previous-nav {
    display: flex;
    flex-wrap: wrap;
    width: auto;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .block {
    display: block;
  }

  @media (min-width: 50em) {
    .sm\:hidden {
      display: none;
    }
  }
  @media (min-width: 72em) {
    .content {
      padding-top: calc(var(--theme-navbar-height) + var(--doc-padding-block));
    }
  }
</style>
